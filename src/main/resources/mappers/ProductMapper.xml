<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ync.project.mapper.ProductMapper">

<!-- <insert id="create">
	INSERT INTO tbl_board (bno, title, content, writer) 
	VALUES(SEQ_BOARD.NEXTVAL, #{title},#{content}, #{writer})
</insert> -->


<select id="read" parameterType="map" resultType="ProductVO">

	SELECT *
	FROM   TE_PRODUCT PRO, TE_PRODUCTIMG IMG, TE_CATEGORY1 CA1, TE_CATEGORY2 CA2 , TE_CATEGORY3 CA3
	WHERE  PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND	   PRO.CATEGORY3_NUM = CA3.CATEGORY3_NUM
 	AND	   PRO.CATEGORY1_NUM = #{CATEGORY1_NUM}
 	AND    PRO.CATEGORY2_NUM = #{CATEGORY2_NUM}
 		<if test="CATEGORY3_NUM != null">
 			AND CATEGORY3_NAME = #{CATEGORY3_NUM}
 		</if>
 		<if test="TAG_1 != null">
 		    AND PRODUCT_TAG LIKE '%'|| #{TAG_1}||'%' -->
 		</if>
 		<if test="TAG_2 != null">
 		    AND PRODUCT_TAG LIKE '%'|| #{TAG_2}||'%' -->
 		 </if>
 		 <if test="TAG_3 != null">
 		    AND PRODUCT_TAG LIKE '%'|| #{TAG_3}||'%' -->
 		 </if>
 		 <if test="TAG_4 != null">
 		    AND PRODUCT_TAG LIKE '%'|| #{TAG_4}||'%' -->
 		 </if>
 		 <if test="TAG_5 != null">
 		    AND PRODUCT_TAG LIKE '%'|| #{TAG_5}||'%' -->
 		 </if>
 		 <if test="TAG_6 != null">
 		    AND PRODUCT_TAG LIKE '%'|| #{TAG_6}||'%' -->
 		 </if>

 	
 	<!-- <if test="CATEGORY3_NUM != null" >
	AND CATEGORY3_NAME = #{CATEGORY3_NUM}
	</if>
	<if test="TAG_1 != null" >
	AND PRODUCT_TAG LIKE '%'|| #{TAG_1}||'%'
	</if> -->
	
	<!-- AND CATEGORY3_NUM LIKE '%'|| #{CATEGORY3_NUM}||'%' -->
</select>
<select id="standard" parameterType="map" resultType="ProductVO">

	SELECT *
	FROM   TE_PRODUCT PRO, TE_PRODUCTIMG IMG, TE_CATEGORY1 CA1, TE_CATEGORY2 CA2 , TE_CATEGORY3 CA3
	WHERE  PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND	   PRO.CATEGORY3_NUM = CA3.CATEGORY3_NUM
 	AND	   PRO.CATEGORY1_NUM = #{CATEGORY1_NUM}
 	AND    PRO.CATEGORY2_NUM = #{CATEGORY2_NUM}
		
</select>

<select id="laptop" parameterType="map" resultType="ProductVO">

	SELECT *
	FROM   TE_PRODUCT PRO, TE_PRODUCTIMG IMG, TE_CATEGORY1 CA1, TE_CATEGORY2 CA2 , TE_CATEGORY3 CA3
	WHERE  PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND	   PRO.CATEGORY3_NUM = CA3.CATEGORY3_NUM
 	AND	   PRO.CATEGORY1_NUM = #{CATEGORY1_NUM}
 	AND    PRO.CATEGORY2_NUM = #{CATEGORY2_NUM}
		
</select>

<!-- <select id="read" parameterType="map" resultType="ProductVO">

	SELECT *
	FROM   TE_PRODUCT PRO, TE_PRODUCTIMG IMG, TE_CATEGORY1 CA1, TE_CATEGORY2 CA2 , TE_CATEGORY3 CA3
	WHERE  PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND	   PRO.CATEGORY3_NUM = CA3.CATEGORY3_NUM
 	AND	   PRO.CATEGORY1_NUM = #{CATEGORY1_NUM}
 	AND    PRO.CATEGORY2_NUM = #{CATEGORY2_NUM}
 	AND    PRO.PRODUCT_TAG LIKE '%%'
 	AND    PRO.PRODUCT_TAG LIKE '%%'
 	AND    PRO.PRODUCT_TAG LIKE '%%'
 	AND    PRO.PRODUCT_TAG LIKE '%%'
 	AND    PRO.PRODUCT_TAG LIKE '%%'
    AND    PRO.PRODUCT_TAG LIKE '%%'
 	AND    PRO.PRODUCT_TAG LIKE '%%';
		
</select> -->

<!-- DB에서 EVENT 이미지 불러오는 쿼리문  -->
<select id="event_img" resultType="ImageVO"> 
	SELECT *
	FROM TE_EVENTIMG
	WHERE EVENTIMG_NUM = #{event_num}
</select>


<select id="detail" resultType="ProductVO">
   SELECT  PRO.PRODUCT_PRICE,
	   	   PRO.PRODUCT_NAME,
	   	   PRO.PRODUCT_TAG,
	   	   IMG.PRODUCTIMG_M,
	   	   IMG.PRODUCTIMG_L,
	   	   PRO.PRODUCT_CONTENT,
	   	   PRO.PRODUCT_NUM,
	   	   CA1.CATEGORY1_NAME,
	   	   CA2.CATEGORY2_NAME,
	   	   CA3.CATEGORY3_NAME
	FROM   TE_PRODUCT PRO, TE_PRODUCTIMG IMG, TE_CATEGORY1 CA1, TE_CATEGORY2 CA2,TE_CATEGORY3 CA3
	WHERE  PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND	   PRO.CATEGORY3_NUM = CA3.CATEGORY3_NUM
	AND    PRO.PRODUCT_NUM = #{PRODUCT_NUM}
</select>

<select id="review" resultType="ProductVO">
   SELECT RE.REVIEW_TITLE,
	   	   RE.REVIEW_CONTENTS,
	   	   RE.REVIEW_DATE,
	   	   REI.REVIEWIMG_PATH,
	   	   RE.USER_ID
	FROM   TE_REVIEW RE, TE_REVIEWIMG REI, TE_PRODUCT PRO
	WHERE  PRO.PRODUCT_NUM = RE.PRODUCT_NUM
	AND    PRO.PRODUCT_NUM = REI.PRODUCT_NUM
	AND    RE.REVIEW_NUM = REI.REVIEW_NUM
	AND    PRO.PRODUCT_NUM = #{PRODUCT_NUM}
</select>

<insert id="writeReply">
 	insert into TE_REVIEW(REVIEW_NUM, REVIEW_TITLE, REVIEW_CONTENTS, USER_ID, PRODUCT_NUM) values (TE_SEQ_REVIEW_IDX.NEXTVAL, #{REVIEW_TITLE}, #{REVIEW_CONTENTS}, 'user02', #{PRODUCT_NUM})
 	insert into TE_REVIEWIMG(REVIEW_NUM, REVIEWIMG_NUM, REVIEWIMG_PATH, PRODUCT_NUM) values(#{REVIEW_NUM}, TE_SEQ_REVIEWIMG_IDX.NEXTVAL, #{REVIEWIMG_PATH}, #{PRODUCT_NUM})
</insert>


<!-- 게시글 view count update -->
<update id="updateViewCnt">
	UPDATE	TE_PRODUCT SET COUNT = COUNT +1
	WHERE	PRODUCT_NUM = #{PRODUCT_NUM}
</update>

<select id="search" resultType="ProductVO">
	SELECT *
	FROM   TE_PRODUCT PRO, TE_PRODUCTIMG IMG, TE_CATEGORY1 CA1, TE_CATEGORY2 CA2
	WHERE  PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND    upper(PRO.PRODUCT_NAME) LIKE '%'|| upper(#{keyword})||'%'
	OR
	PRO.PRODUCT_NUM = IMG.PRODUCT_NUM
	AND	   PRO.CATEGORY1_NUM = CA1.CATEGORY1_NUM
	AND	   PRO.CATEGORY2_NUM = CA2.CATEGORY2_NUM
	AND    upper(PRO.PRODUCT_TAG) LIKE '%'|| upper(#{keyword})||'%'
</select>

<!-- 
<update id="update">
	UPDATE tbl_board	SET title =#{title},
						content =#{content},
						writer =#{writer}
	WHERE bno = #{bno}
</update>

댓글 count update
<update id="updateReplyCnt">
	UPDATE	tbl_board SET replycnt = replycnt + #{amount}
	WHERE	bno = #{bno} 
</update>

게시글 view count update
<update id="updateViewCnt">
	UPDATE	tbl_board SET viewcnt = viewcnt +1
	WHERE	bno = #{bno}
</update>

<delete id="delete">
	delete from tbl_board where bno = #{bno}
</delete>

<select id="listAll" resultType="ProductVO">
	<![CDATA[
	SELECT 	bno,
			title,
			content,
			writer,
			regdate,
			viewcnt,
			replycnt
	FROM tbl_board 
	WHERE bno > 0 
	ORDER BY bno DESC, regdate DESC
	]]>  
</select>
 

<select id="listPage"  resultType="ProductVO">
	<![CDATA[
	SELECT	bno,
			title,
			content,
			writer,
			viewcnt,
			regdate,
			replycnt
	FROM   (SELECT 	/*+INDEX_DESC(tbl_board pk_board)*/
					rownum rn,
					bno,
					title,
					content,
					writer,
					viewcnt,
					regdate,
					replycnt
	  		FROM	tbl_board
			WHERE	rownum <= #{page} * #{perPageNum}
			AND		bno > 0
			)
	WHERE 	rn > (#{page} -1) * #{perPageNum}
	]]>
</select>

<select id="listCriteria" resultType="ProductVO">
	<![CDATA[
	SELECT	bno,
			title,
			content,
			writer,
			viewcnt,
			regdate,
			replycnt
	FROM   (SELECT 	/*+INDEX_DESC(tbl_board pk_board)*/
					rownum rn,
					bno,
					title,
					content,
					writer,
					viewcnt,
					regdate,
					replycnt
	  		FROM	tbl_board
			WHERE	rownum <= #{page} * #{perPageNum}
			AND		bno > 0
			)
	WHERE 	rn > (#{page} -1) * #{perPageNum}
	]]>
</select>

<select id="countPaging" resultType="int">
	<![CDATA[
	SELECT	count(bno) 
	FROM	tbl_board 
	WHERE	bno > 0 
	]]>
</select>

분리되기 전 listSearch 쿼리 시작
<select id="listSearch_old"  resultType="ProductVO">
	<![CDATA[
		SELECT	bno,
				title,
				content,
				writer,
				viewcnt,
				regdate
		FROM   (SELECT 	/*+INDEX_DESC(tbl_board pk_board)*/
						rownum rn,
						bno,
						title,
						content,
						writer,
						viewcnt,
						regdate
		  		FROM	tbl_board
	]]>
		
		<where> 엘리먼트로 검색을 하지 않았을 경우 AND rownum <= 과 같이 WHERE 구문이 빠져버린다.
		따라서 <where> 를 사용하면 AND나 OR로 구문이 시작되면 AND나 OR를 지워버린다.
		아래 구문과 동일한 기능. 
		<trim prefix="WHERE" prefixOverrides="AND|OR ">
		  ... 
		</trim>
		http://www.mybatis.org/mybatis-3/ko/dynamic-sql.html 참고
		
		<where>
				
				<if test="searchType != null" >
					<if test="searchType == 't'.toString()">
						AND title LIKE '%'|| #{keyword}||'%'
					</if>
					<if test="searchType == 'c'.toString()">
						AND content LIKE '%'|| #{keyword}||'%'
					</if>
					<if test="searchType == 'w'.toString()">
						AND writer LIKE '%'|| #{keyword}||'%'
					</if>    
					<if test="searchType == 'tc'.toString()">
						AND (title LIKE '%'|| #{keyword}||'%' OR content LIKE '%'|| #{keyword}||'%')
					</if>      
				</if>

				<![CDATA[
				AND rownum <= #{page} * #{perPageNum}
				AND bno > 0
		  		)
				]]>
		</where>
	<![CDATA[
		WHERE rn > (#{page} -1) * #{perPageNum}
	]]>
</select>

동적SQL (<sql>로 분리) 작성된 최종 SQL 시작
<sql id="search">
	<if test="searchType != null" >
		<if test="searchType == 't'.toString()">
			AND title LIKE '%'|| #{keyword}||'%'
		</if>
		<if test="searchType == 'c'.toString()">
			AND content LIKE '%'|| #{keyword}||'%'
		</if>
		<if test="searchType == 'w'.toString()">
			AND writer LIKE '%'|| #{keyword}||'%'
		</if>    
		<if test="searchType == 'tc'.toString()">
			AND (title LIKE '%'|| #{keyword}||'%' OR content LIKE '%'|| #{keyword}||'%')
		</if>      
	</if>
</sql>

<select id="listSearch"  resultType="ProductVO">
	<![CDATA[
		SELECT	bno,
				title,
				content,
				writer,
				viewcnt,
				regdate,
				replycnt
		FROM   (SELECT 	/*+INDEX_DESC(tbl_board pk_board)*/
						rownum rn,
						bno,
						title,
						content,
						writer,
						viewcnt,
						regdate,
						replycnt
		  		FROM	tbl_board
	]]>
		
		<where> 엘리먼트로 검색을 하지 않았을 경우 AND rownum <= 과 같이 WHERE 구문이 빠져버린다.
		따라서 <where> 를 사용하면 AND나 OR로 구문이 시작되면 AND나 OR를 지워버린다.
		아래 구문과 동일한 기능. 
		<trim prefix="WHERE" prefixOverrides="AND|OR ">
		  ... 
		</trim>
		http://www.mybatis.org/mybatis-3/ko/dynamic-sql.html 참고
		
		<where>
				<include refid="search"></include>
				<![CDATA[
				AND rownum <= #{page} * #{perPageNum}
				AND bno > 0
		  		)
				]]>
		</where>
	<![CDATA[
		WHERE rn > (#{page} -1) * #{perPageNum}
	]]>
</select>

<select id="listSearchCount"  resultType="int">
	<![CDATA[
		SELECT	count(bno)
		FROM	tbl_board
	]]>
	
	<where>
		<include refid="search"></include>
		<![CDATA[
			AND bno > 0
		]]>
	</where>
</select> -->
<!-- 동적SQL (<sql>로 분리) 작성된 최종 SQL 끝-->
</mapper>
